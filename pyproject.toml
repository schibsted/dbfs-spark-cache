[project]
name = "dbfs-spark-cache"
version = "0.4.9"
description = "A utility for caching Spark DataFrames in Databricks File System"
readme = "README.md"
authors = [
    { name = "Nils TÃ¶rnblom" }
]
requires-python = ">=3.10"
dependencies = [
    "databricks-sdk>=0.20.0",
    "pandas>=2.2.3",
    "pydantic>=2.10.4",
    "pydantic-settings>=2.7.0",
    "tqdm>=4.67.1",
    "mypy>=1.14.1",
    "pandas-stubs>=2.2.3.241126",
    "types-tqdm>=4.67.0.20241221",
    "pyarrow>=19.0.1",
    "typing-extensions==4.12.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.urls]
Homepage = "https://github.com/schibsted/dbfs-spark-cache"

[tool.hatch.build]
packages = ["dbfs_spark_cache"]
only-packages = true
exclude = ["tests"]

[tool.pyright]
typeCheckingMode = "basic"
useLibraryCodeForTypes = false
include = ["dbfs_spark_cache", "tests"]
exclude = [".venv", "build"]
ignore = [".venv", "build"]
reportUndefinedVariable = "warning" # Downgrade undefined variable errors to warnings
reportGeneralTypeIssues = "warning" # Downgrade general type issues to warnings

[[tool.pyright.perSourceFileOverrides]]
sourceRegex = "dbfs_spark_cache/caching.py"
reportOptionalMemberAccess = "none" # Ignore errors related to accessing members on potentially None types
reportAttributeAccessIssue = "none" # Ignore errors related to accessing unknown attributes
reportMissingImports = "none" # Ignore errors related to missing imports (e.g., pandas.util.hash_pandas_object)

[[tool.pyright.perSourceFileOverrides]]
sourceRegex = "tests/test_create_cached_dataframe.py"
reportAttributeAccessIssue = "none" # Ignore errors related to accessing unknown attributes (e.g., spark.master)

[tool.mypy]
exclude = [".venv", "build"]

[[tool.mypy.overrides]]
module = ["pytest.*"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["dbfs_spark_cache.caching"]
# Ignore errors related to pandas.util.hash_pandas_object and ExtensionArray.tobytes
# These seem to be related to type stub issues with pandas in this specific context.
disable_error_code = ["import-not-found", "union-attr"]

[[tool.mypy.overrides]]
module = ["tests.notebooks.*"]
disable_error_code = ["name-defined", "has-type", "used-before-def", "operator", "method-assign", "arg-type", "attr-defined"]

[[tool.mypy.overrides]]
module = ["google.*"]
ignore_missing_imports = true
disable_error_code = ["import-untyped"]

[[tool.mypy.overrides]]
module = ["pyspark.*", "py4j.*"]
ignore_missing_imports = true

[tool.ruff]
# Ignore E402 (module level import not at top of file) in test files
# Ignore F401 (unused imports) in test files
ignore = ["E402", "E701"]
exclude = [".venv", "build"]

[tool.ruff.per-file-ignores]
"tests/*" = ["F401"]
"tests/notebooks/*" = ["F821"]

[project.optional-dependencies]
dev = [
    "mypy>=1.14.1",
    "pandas-stubs>=2.2.3.241126",
    "pip>=24.3.1",
    "pre-commit>=4.0.1",
    "pyright>=1.1.391",
    "pytest>=8.3.4",
    "types-tqdm>=4.67.0.20241221",
    "pip-licenses>=5.0.0",
    "hatch>=1.10.0",  # Added for building
    "hatchling>=1.27.0",  # Added for building
    "twine>=5.1.1",   # Added for uploading
    "pyspark>=3.5.0", # Added for tests
]
